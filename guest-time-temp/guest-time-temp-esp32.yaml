##
## This code has been shared to https://github.com/kdorff/esphome/tree/main/guest-time-temp
##

esphome:
  name: guest-time-temp-esp32
  includes:
    - room-time-temp-wind.h
  libraries:
    esphome-display-panel=https://github.com/kdorff/esphome-display-panel.git#v0.0.14

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret guest_time_temp_api_encryption

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "guest-time-temp Fallback Hotspot"
    password: !secret fallback_wifi_password

# Save memory. Disable captive portal.
# captive_portal:

# bluetooth_proxy:
#   active: true

i2c:
  frequency: 800kHz

## Fonts come from https://fonts.google.com/
## "gfonts://Noto+Sans"
## "gfonts://Poppins"  - like better than Noto+Sans
## "gfonts://Anton" -- a bit bold
## "gfonts://Bebas+Neue"  -- all caps, don't love that
## "gfonts://Fjalla+One" - pretty good
## "gfonts://Merriweather+Sans" - nice, maybe frilly
## "gfonts://Righteous" - Like it a lot
font:
  - file: "gfonts://Rubik@700"
    id: font_time
    size: 34
  - file: "gfonts://Rubik@700"
    id: font_alarm
    size: 12
  - file: "gfonts://Rubik@700"
    id: font_date
    size: 15
  - file: "gfonts://Rubik@700"
    id: font_temp
    size: 22
  - file: "gfonts://Rubik@500"
    id: font_temp_label
    size: 10

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3C
    update_interval: 1s
    contrast: 1%
    lambda: |-
      static bool panelsInitialized = false;
      if (!panelsInitialized) {
        initializePanels(it);
        panelsInitialized = true;
      }

      updatePanelStates();
      drawPanels();

time:
  - platform: homeassistant
    id: esptime
    on_time_sync:
      then:
        - lambda: !lambda |-
            static boolean bootTimeSet = false;
            if (!bootTimeSet) {
              auto now = id(esptime).now();
              char buffer[20];
              now.strftime(buffer, sizeof(buffer), "%Y-%m-%dT%H:%M:%S");
              id(guest_time_temp_esp32_boot_time).publish_state(buffer);
              bootTimeSet = true;
            }

text_sensor:
  - platform: homeassistant
    id: next_alarm
    entity_id: sensor.guest_bedroom_next_alarm_str
  - platform: template
    name: "guest-time-temp-esp32 Boot Time"
    id: guest_time_temp_esp32_boot_time
    icon: mdi:clock-start
  - platform: homeassistant
    id: wind_direction
    entity_id: sensor.weather_wind_dir

sensor:
  ##
  ## HA sensors we need to do our work.
  ##
  - platform: homeassistant
    id: back_yard_temperature
    entity_id: sensor.back_yard_sensor_temperature
  - platform: homeassistant
    id: inside_temperature
    entity_id: sensor.guest_bedroom_ecobee_sensor_temperature
  - platform: homeassistant
    id: wind_speed
    entity_id: sensor.openweathermap_wind_speed
  - platform: homeassistant
    id: wind_gust_speed
    entity_id: sensor.openweathermap_wind_gust_speed
